{"ast":null,"code":"import _classCallCheck from \"/Users/arnab/Desktop/my-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/arnab/Desktop/my-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/arnab/Desktop/my-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/arnab/Desktop/my-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/arnab/Desktop/my-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/arnab/Desktop/my-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport images from \"./images.json\";\nimport ImageCards from \"./ImageCards\"; // import Wrapper from \"./Wrapper\";\n\nimport Header from \"./Header\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      images: images,\n      score: 0,\n      highscore: 0\n    };\n\n    _this.arrangeImageRandom = function (id) {\n      _this.state.images.find(function (o, i) {\n        if (o.id === id) {\n          if (images[i].count === 0) {\n            images[i].count = images[i].count + 1;\n\n            _this.setState({\n              score: _this.state.score + 1\n            }, function () {\n              console.log(this.state.score);\n            });\n\n            _this.state.images.sort(function () {\n              return Math.random() - 0.5;\n            });\n\n            return true;\n          } else {\n            _this.gameOver();\n          }\n        }\n      });\n    };\n\n    _this.gameOver = function () {\n      if (_this.state.score > _this.state.highscore) {\n        _this.setState({\n          highscore: _this.state.score\n        }, function () {\n          console.log(this.state.highscore);\n        });\n      }\n\n      _this.state.images.forEach(function (image) {\n        image.count = 0;\n      });\n\n      alert(\"Game Over :( \\nscore: \".concat(_this.state.score));\n\n      _this.setState({\n        score: 0\n      });\n\n      return true;\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // arrangeImageRandom = id => {\n    //   //1. if image is already clicked\n    //   //Change Alert //current score  = 0\n    //   //if current score >high score then highscore is current score\n    //   //2.  if image clicked is false\n    //   // change this image clicked to true -  TO BE DONE\n    //   //re arrange the images/ sort the images into a random\n    //   // selectedArray.push(id);\n    //   // console.log (selectedArray);\n    //   // console.log(\"line 26 in app js\", this.state.images[id]);\n    //   for (let i = images.length - 1; i > 0; i--) {\n    //     const j = Math.floor(Math.random() * (i + 1));\n    //     [images[i], images[j]] = [images[j], images[i]];\n    //   }\n    //   this.setState({images});\n    //   console.log(\"randomly sorted\", images);\n    // };\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Header, {\n        score: this.state.score,\n        highscore: this.state.highscore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Clicky Game\"), React.createElement(\"div\", {\n        className: \"jumbotron jumbotron-fluid text-center newBackground\",\n        styleName: \"back\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \" Memory Game\"), \" \", React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Click on an image to earn points, but don't click on any more than once!\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.state.images.map(function (image) {\n        return React.createElement(ImageCards, {\n          arrangeImageRandom: _this2.arrangeImageRandom,\n          id: image.id,\n          key: image.id,\n          image: image.image,\n          clicked: image.clicked //added this line\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/arnab/Desktop/my-game/src/App.js"],"names":["React","Component","images","ImageCards","Header","App","state","score","highscore","arrangeImageRandom","id","find","o","i","count","setState","console","log","sort","Math","random","gameOver","forEach","image","alert","map","clicked"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport images from \"./images.json\";\nimport ImageCards from \"./ImageCards\";\n// import Wrapper from \"./Wrapper\";\nimport Header from \"./Header\";\n\nclass App extends Component {\n  state = {\n    images,\n    score: 0,\n    highscore: 0\n  };\n\n  arrangeImageRandom = id => {\n    this.state.images.find((o, i) => {\n      if (o.id === id) {\n        if (images[i].count === 0) {\n          images[i].count = images[i].count + 1;\n          this.setState({ score: this.state.score + 1 }, function() {\n            console.log(this.state.score);\n          });\n          this.state.images.sort(() => Math.random() - 0.5);\n          return true;\n        } else {\n          this.gameOver();\n        }\n      }\n    });\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({ highscore: this.state.score }, function() {\n        console.log(this.state.highscore);\n      });\n    }\n    this.state.images.forEach(image => {\n      image.count = 0;\n    });\n    alert(`Game Over :( \\nscore: ${this.state.score}`);\n    this.setState({ score: 0 });\n    return true;\n  };\n\n  // arrangeImageRandom = id => {\n  //   //1. if image is already clicked\n  //   //Change Alert //current score  = 0\n  //   //if current score >high score then highscore is current score\n\n  //   //2.  if image clicked is false\n  //   // change this image clicked to true -  TO BE DONE\n  //   //re arrange the images/ sort the images into a random\n  //   // selectedArray.push(id);\n  //   // console.log (selectedArray);\n\n  //   // console.log(\"line 26 in app js\", this.state.images[id]);\n  //   for (let i = images.length - 1; i > 0; i--) {\n  //     const j = Math.floor(Math.random() * (i + 1));\n  //     [images[i], images[j]] = [images[j], images[i]];\n  //   }\n  //   this.setState({images});\n  //   console.log(\"randomly sorted\", images);\n  // };\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n       \n       <Header score={this.state.score} highscore={this.state.highscore}>Clicky Game</Header>\n        <div\n          className=\"jumbotron jumbotron-fluid text-center newBackground\"\n          styleName=\"back\"\n        >\n          <h1> Memory Game</h1>{\" \"}\n          <p>\n            Click on an image to earn points, but don't click on any more than\n            once!\n          </p>\n        </div>\n        {/* <ImageCards id={images[1].id} image={images[1].image} arrangeImageRandom={this.arrangeImageRandom} /> */}\n        <div className=\"row\">\n          {this.state.images.map(image => (\n            <ImageCards\n              arrangeImageRandom={this.arrangeImageRandom}\n              id={image.id}\n              key={image.id}\n              image={image.image}\n              clicked={image.clicked} //added this line\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
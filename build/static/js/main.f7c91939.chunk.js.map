{"version":3,"sources":["ImageCards.js","Header.js","App.js","index.js"],"names":["ImageCards","props","react_default","a","createElement","className","alt","id","src","image","clicked","onClick","arrangeImageRandom","Header","score","highscore","styleName","children","App","state","images","_this","find","o","i","count","setState","console","log","this","sort","Math","random","gameOver","forEach","alert","concat","_this2","src_Header","map","src_ImageCards","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"w7DAYeA,EATI,SAAAC,GAAK,OAElBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,GAAIC,IAAKP,EAAMQ,MAAOC,QAAST,EAAMS,QAASC,QAAS,kBAAMV,EAAMW,mBAAmBX,EAAMM,SC6BrGM,EAjCA,SAAAZ,GAAK,OAChBC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,yBAAiBH,EAAMa,QAG3BZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,kCAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,wBAAgBH,EAAMc,UAAtB,OAIJb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sDAAsDW,UAAU,QAC/Ed,EAAAC,EAAAC,cAAA,cAAMH,EAAMgB,UACZf,EAAAC,EAAAC,cAAA,yFCqEOc,6MAlFbC,MAAQ,CACNC,SACAN,MAAO,EACPC,UAAW,KAGbH,mBAAqB,SAAAL,GACnBc,EAAKF,MAAMC,OAAOE,KAAK,SAACC,EAAGC,GACzB,GAAID,EAAEhB,KAAOA,EAAI,CACf,GAAwB,IAApBa,EAAOI,GAAGC,MAMZ,OALAL,EAAOI,GAAGC,MAAQL,EAAOI,GAAGC,MAAQ,EACpCJ,EAAKK,SAAS,CAAEZ,MAAOO,EAAKF,MAAML,MAAQ,GAAK,WAC7Ca,QAAQC,IAAIC,KAAKV,MAAML,SAEzBO,EAAKF,MAAMC,OAAOU,KAAK,kBAAMC,KAAKC,SAAW,MACtC,EAEPX,EAAKY,WAGT,OAAON,QAAQC,IAAIL,EAAEC,QAIzBS,SAAW,WAWT,OAVIZ,EAAKF,MAAML,MAAQO,EAAKF,MAAMJ,WAChCM,EAAKK,SAAS,CAAEX,UAAWM,EAAKF,MAAML,OAAS,WAC7Ca,QAAQC,IAAIC,KAAKV,MAAMJ,aAG3BM,EAAKF,MAAMC,OAAOc,QAAQ,SAAAzB,GACxBA,EAAMgB,MAAQ,IAEhBU,MAAK,yBAAAC,OAA0Bf,EAAKF,MAAML,QAC1CO,EAAKK,SAAS,CAAEZ,MAAO,KAChB,2EAuBA,IAAAuB,EAAAR,KACP,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACkC,EAAD,CAAQxB,MAAOe,KAAKV,MAAML,MAAOC,UAAWc,KAAKV,MAAMJ,WAAvD,sBAKAb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZwB,KAAKV,MAAMC,OAAOmB,IAAI,SAAA9B,GAAK,OAC1BP,EAAAC,EAAAC,cAACoC,EAAD,CACE5B,mBAAoByB,EAAKzB,mBACzBL,GAAIE,EAAMF,GACVkC,IAAKhC,EAAMF,GACXE,MAAOA,EAAMA,MACbC,QAASD,EAAMC,qBA1EXgC,aCDlBC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.f7c91939.chunk.js","sourcesContent":["import React from \"react\";\n// import images from \"./images.json\";\n\nconst ImageCards = props => (\n\n      <div className=\"col-sm-3 ImageFormat\">\n        <img alt={props.id} src={props.image} clicked={props.clicked} onClick={() => props.arrangeImageRandom(props.id) } />\n     \n    </div>\n  );\n  \n\nexport default ImageCards;","import React from \"react\";\n\nconst Header = props => (\n    <div>\n        <div className=\"row text-center\">\n\n        <div className=\"col-sm-4\">\n            <p> Your Score: {props.score}</p>\n        </div>\n\n        <div className=\"col-sm-4\">\n            <p>Welcome, let's Play!</p>\n        </div>\n\n        <div className=\"col-sm-4\">\n            <p> Highscore: {props.highscore} </p>\n        </div>\n        </div>\n\n        <div className=\"jumbotron jumbotron-fluid text-center newBackground\" styleName=\"back\">\n        <h1> {props.children}</h1>\n        <p>Click on an image to earn points, but don't click on any more than once! </p>\n        </div>\n\n    </div>\n        \n\n\n    \n\n\n    \n\n);\n\nexport default Header;\n\n\n\n\n\n\n\n\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport images from \"./images.json\";\nimport ImageCards from \"./ImageCards\";\n// import Wrapper from \"./Wrapper\";\nimport Header from \"./Header\";\n\nclass App extends Component {\n  state = {\n    images,\n    score: 0,\n    highscore: 0\n  };\n\n  arrangeImageRandom = id => {\n    this.state.images.find((o, i) => {\n      if (o.id === id) {\n        if (images[i].count === 0) {\n          images[i].count = images[i].count + 1;\n          this.setState({ score: this.state.score + 1 }, function() {\n            console.log(this.state.score);\n          });\n          this.state.images.sort(() => Math.random() - 0.5);\n          return true;\n        } else {\n          this.gameOver();\n        }\n      }\n      return console.log(o,i);\n    });\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({ highscore: this.state.score }, function() {\n        console.log(this.state.highscore);\n      });\n    }\n    this.state.images.forEach(image => {\n      image.count = 0;\n    });\n    alert(`Game Over :( \\nscore: ${this.state.score}`);\n    this.setState({ score: 0 });\n    return true;\n  };\n\n  // arrangeImageRandom = id => {\n  //   //1. if image is already clicked\n  //   //Change Alert //current score  = 0\n  //   //if current score >high score then highscore is current score\n\n  //   //2.  if image clicked is false\n  //   // change this image clicked to true -  TO BE DONE\n  //   //re arrange the images/ sort the images into a random\n  //   // selectedArray.push(id);\n  //   // console.log (selectedArray);\n\n  //   // console.log(\"line 26 in app js\", this.state.images[id]);\n  //   for (let i = images.length - 1; i > 0; i--) {\n  //     const j = Math.floor(Math.random() * (i + 1));\n  //     [images[i], images[j]] = [images[j], images[i]];\n  //   }\n  //   this.setState({images});\n  //   console.log(\"randomly sorted\", images);\n  // };\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <Header score={this.state.score} highscore={this.state.highscore}>\n          Clicky Memory Game\n        </Header>\n\n        {/* <ImageCards id={images[1].id} image={images[1].image} arrangeImageRandom={this.arrangeImageRandom} /> */}\n        <div className=\"row\">\n          {this.state.images.map(image => (\n            <ImageCards\n              arrangeImageRandom={this.arrangeImageRandom}\n              id={image.id}\n              key={image.id}\n              image={image.image}\n              clicked={image.clicked} //added this line\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}